-- 1번 a : DB, b: DBMS, c: SQL
-- 2번 a: COMMIT; b: ROLLBACK;
-- 3번 FROM > WHERE > GROUP BY > HAVING > SELECT > ORDER BY
-- 4번 DML : SELECT, INSERT / DDL : CREATE, ALTER / DCL : GRANT, REVOKE
-- 5번 
SELECT  JOB_ID, AVG(SALARY) AS 평균연봉
FROM EMPLOYEES
GROUP BY JOB_ID
HAVING AVG(SALARY) > 13000;
-- WHERE이 GROUP BY 보다 실행 순서가 앞서기 때문에 WHERE이 아닌 HAVING을 사용해야한다.
-- 특정 컬럼으로 묶기 위해 GROUP BY 를 사용한 후 조건을 걸어줘야하기 때문에 HAVING을 사용해야한다.

-- 6-1번
SELECT E.EMPLOYEE_ID, E.EMAIL, E.SALARY, D.DEPARTMENT_NAME, D.LOCATION_ID
FROM EMPLOYEES E, DEPARTMENTS D
WHERE E.DEPARTMENT_ID = D.DEPARTMENT_ID AND E.SALARY >= 14000;


-- 6-2번
SELECT A.DEPARTMENT_ID, A.DEPARTMENT_NAME, A.MANAGER_ID, B.FIRST_NAME, B.LAST_NAME
FROM DEPARTMENTS A LEFT OUTER JOIN EMPLOYEES B
ON(A.MANAGER_ID = B.EMPLOYEE_ID)
WHERE A.LOCATION_ID=1700;

-- 7번
SELECT FIRST_NAME, JOB_ID, SALARY
FROM EMPLOYEES
WHERE SALARY > (SELECT AVG(SALARY)
                FROM EMPLOYEES);
                
                
-- 8번
CREATE TABLE HR.EMP(
	EMPNO NUMBER(4) PRIMARY KEY,
	ENAME VARCHAR2(10),
	JOB VARCHAR2(9),
	MGR NUMBER(4),
	HIREDATE DATE,
	SAL NUMBER(7,2),
	COMM NUMBER(7,2),
	DEPTNO NUMBER(2)
);

CREATE TABLE HR.DEPT(
    DEPTNO NUMBER(2) PRIMARY KEY,
    DNAME VARCHAR2(14) NOT NULL,
    LOC VARCHAR2(13)
);

ALTER TABLE HR.EMP ADD CONSTRAINT DEPTNO_FK FOREIGN KEY(DEPTNO)
REFERENCES HR.DEPT(DEPTNO);